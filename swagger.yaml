swagger: "2.0"
info:
  description: "An API used to customise and submit queries (filters) against a given dataset. Once the filter job has been created it can then be updated with dimension-specific filters that apply to that dataset. Once all the required filters have been applied to the job, it is expected that the client will update the job state to indicate that processing can begin. Once processing has been started the job will be placed in a locked condition such that no further amendments can be done. Finally, the state will be marked as completed (or failed)."
  version: "1.0.0"
  title: "Filter API"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Filter"
  description: "Used to filter published datasets"
schemes:
- "http"
parameters:
  filter_job_id:
    name: filter_job_id
    type: string
    required: true
    description: "The unique filter ID for customising a dataset"
    in: path
  name:
    name: name
    type: string
    required: true
    description: "The name of a dimension"
    in: path
  option:
    name: option
    type: string
    required: true
    description: "The single option for a dimension"
    in: path
  dimension:
    name: dimension
    schema:
      $ref: '#/definitions/Dimension'
    required: true
    description: "A dimension to filter the dataset"
    in: body
  options:
    required: false
    name: options
    schema:
      $ref: '#/definitions/Options'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  new_filter_job:
    name: filter_job
    schema:
      $ref: '#/definitions/NewJobRequest'
    required: true
    description: "Model of all editable properties within a filter job"
    in: body
  update_filter_job:
    name: filter_job
    schema:
      $ref: '#/definitions/UpdateJobRequest'
    required: true
    description: "Model of all editable properties within a filter job"
    in: body
paths:
  /filters:
    post:
      tags:
      - "Filter"
      summary: "Create a filter job for a dataset"
      description: "Create a job so that dimensions can be added to filter a dataset"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/new_filter_job'
      responses:
        201:
          description: "Job was created"
          schema:
            $ref: '#/definitions/NewJobResponse'
        400:
          description: "Invalid request body"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_job_id}:
    parameters:
      - $ref: '#/parameters/filter_job_id'
    get:
      tags:
      - "Filter"
      summary: "Get a description of a filter job"
      description: "Get document describing the filter job"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter job was found and document is returned"
          schema:
            $ref: '#/definitions/NewJobResponse'
        404:
           $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Filter"
      summary: "Update filter job"
      description: |
        Update the filter job by providing new properties
      parameters:
      - $ref: '#/parameters/update_filter_job'
      responses:
        200:
          description: "The filter job has been updated"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        403:
          description: "Forbidden, the job has been locked as it has been `submitted` to be processed"
        404:
          $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_job_id}/dimensions:
    get:
      tags:
       - "Filter"
      summary: "Get all dimensions used by this filter"
      description: |
        Return a list of all dimensions which are going to be used to filter on
      parameters:
      - $ref: '#/parameters/filter_job_id'
      responses:
        200:
          description: "A list of dimension URLs"
          schema:
            type: array
            items:
              $ref: '#/definitions/Dimension'
        404:
          $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_job_id}/dimensions/{name}:
    parameters:
      - $ref: '#/parameters/filter_job_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Filter"
      summary: "Check if a dimension exists within a filter job"
      description: "Check if a dimension exists within a filter job"
      responses:
        204:
          description: "Dimension exists for filter job"
        400:
          description: "Filter job was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Filter"
      summary: "Add a dimension to filter on with a list of options"
      description: "The dimension can only be added into the job if the state is still set to `created` otherwise 403 status code is returned"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/options'
      responses:
        201:
          description: "The dimension was created"
        400:
          description: "Invalid request body"
        403:
          description: "Forbidden, the filter job has been locked as it has been `submitted` to be processed"
        404:
          description: "Filter job was not found"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Filter"
      summary: "Remove a dimension and any options set within the dimension"
      description: "Remove a dimension and any options set within the dimension"
      responses:
        200:
          description: "The dimension was removed"
        400:
          description: "Filter job was not found"
        403:
          description: "Forbidden, the filter job has been locked as it has been `submitted` to be processed"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_job_id}/dimensions/{name}/options:
    parameters:
      - $ref: '#/parameters/filter_job_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Filter"
      summary: "Get all options from a dimension which have been set"
      description: "Get a list of all options which will be used to filter the dimension"
      responses:
        200:
          description: "A list of all options for a dimension was returned"
          schema:
            type: array
            items:
              $ref: '#/definitions/Option'
        400:
          description: "Filter job was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_job_id}/dimensions/{name}/options/{option}:
    parameters:
      - $ref: '#/parameters/filter_job_id'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/option'
    get:
      tags:
      - "Filter"
      summary: "Check if a option exists within a dimension"
      description: "Check if a option exists within a dimension"
      responses:
        204:
          description: "Option exists within the dimension"
        400:
          $ref: '#/responses/FilterOrDimensionNotFound'
        404:
          description: "Dimension option was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Filter"
      summary: "Add an option to a dimension to filter on"
      description: "Add an option to a dimension to filter on"
      responses:
        201:
          description: "Option was added"
        400:
          description: "Filter job was not found"
        403:
          description: "Forbidden, the filter job has been locked as it has been `submitted` to be processed"
        404:
          description: " Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Filter"
      summary: "Remove an option from a dimension"
      description: "Remove a single option from a dimension"
      responses:
        200:
          description: "Option was removed"
        400:
          description: |
            This error code could be one or more of:
            * Filter job was not found
            * Dimension name was not found
        403:
          description: "Forbidden, the filter job has been locked as it has been `submitted` to be processed"
        404:
          description: "Dimension option was not found"
        500:
          $ref: '#/responses/InternalError'
responses:
  FilterJobNotFound:
    description: "Filter job not found"
  FilterOrDimensionNotFound:
    description: "Filter job or dimension name not found"
  InternalError:
    description: "Failed to process the request due to an internal error"
definitions:
  NewJobRequest:
    description: "A model used to create new filter jobs. Dimensions are optional"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dimensions:
          readOnly: false
          type: array
          description: "A list of dimensions in the filter job"
          items:
             $ref: '#/definitions/DimensionOptions'
  UpdateJobRequest:
    description: "A model used to update filter jobs. Dimensions are optional, while downloads and events are for internal use only."
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        downloads:
          readOnly: false
          type: object
          description: |
            The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed and can only be updated if authorised
          items:
            $ref: '#/definitions/Downloads'
        events:
          readOnly: false
          type: object
          description: |
            A list of events which happened to the job, can only be updated if authorised.
          items:
            $ref: '#/definitions/Events'
  NewJobResponse:
    description: "A model for the response body when creating a new filter job"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
  JobState:
    description: |
      A description of a job to generate a customised dataset
    type: object
    required: ["instance_id"]
    properties:
      filter_job_id:
        readOnly: true
        type: string
        description: "A unique id for this filter job"
      instance_id:
        type: string
        description: 'An instance ID for the specific dataset version to be filtered'
      dimension_list_url:
        readOnly: true
        type: string
        description: "A url that lists all dimensions currently set for job filter"
      state:
        type: string
        description: |
          The state of the job can be in five states;
          * created - The job is ready to be updated with filters. (default state)
          * submitted - The job has been submitted to be processed. This will lock the job and no further changes can be done
          * in progress -
          * completed - The job has been completed and can be downloaded using the `downloadUrl`
          * failed - The job failed to be processed
      downloads:
        readOnly: true
        type: object
        description: |
          The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed
        properties:
          xls:
            $ref: '#/definitions/DownloadFile'
          json:
           $ref: '#/definitions/DownloadFile'
          csv:
           $ref: '#/definitions/DownloadFile'
      events:
        readOnly: true
        type: object
        description: |
          A list of event which happened to the job.
        properties:
          info:
            type: array
            items:
              $ref: '#/definitions/Event'
          error:
            type: array
            items:
              $ref: '#/definitions/Event'
  Dimension:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      dimension_url:
        type: string
        description: "A link to the filtered options within the dimension"
        items:
          type: string
          example: "/filters/00001/dimensions/age"
  DimensionOptions:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  Downloads:
    type: object
    description: |
      The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed and can only be updated if authorised
    properties:
      xls:
        $ref: '#/definitions/DownloadFile'
      json:
        $ref: '#/definitions/DownloadFile'
      csv:
        $ref: '#/definitions/DownloadFile'
  Option:
    type: object
    description: "An option for a dimension to filter on a dataset. Information on a dimension option can be gathered using the `Dataset API`"
    properties:
      dimension_option_url:
        type: string
        description: "A link to a filtered dimension option"
      option:
        type: string
        description: "The filtered dimension option"
  Options:
    type: object
    description: "A list of options for dimension to filter on a dataset"
    properties:
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  Events:
    readOnly: true
    type: object
    description: |
      A list of events which happened to the job, can only be updated if authorised.
    properties:
      info:
        type: array
        items:
          $ref: '#/definitions/Event'
      error:
        type: array
        items:
          $ref: '#/definitions/Event'
  Event:
    type: object
    description: "A description of an event which has happened to the job"
    properties:
      time:
        type: string
        description: "The time of the event happened"
      type:
        type: string
        description: "The type of event which happened"
      message:
        type: string
        description: "The description of the event which has happened"
  DownloadFile:
    type: object
    properties:
      url:
        type: string
        description: "The URL to the generated file"
      size:
        type: string
        description: "The size of the file in bytes"
