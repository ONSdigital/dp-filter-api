swagger: "2.0"
info:
  description: "An API used to customise and submit queries (filters) against a given dataset. Once the filter job has been created it can then be updated with dimension-specific filters that apply to that dataset. Once all the required filters have been applied to the job, it is expected that the client will update the job state to indicate that processing can begin. Once processing has been started the job will be placed in a locked condition such that no further amendments can be done. Finally, the state will be marked as completed (or failed)."
  version: "1.0.0"
  title: "Filter API"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Filter"
  description: "Used to filter published datasets"
schemes:
- "http"
parameters:
  filter_id:
    name: filter_id
    type: string
    required: true
    description: "The unique filter ID for customising a dataset"
    in: path
  name:
    name: name
    type: string
    required: true
    description: "The name of a dimension"
    in: path
  value:
    name: value
    type: string
    required: true
    description: "The single value for a dimension"
    in: path
  dimension:
    name: dimension
    schema:
      $ref: '#/definitions/Dimension'
    required: true
    description: "A dimension to filter the dataset"
    in: body
  filter_job:
    name: filter_job
    schema:
      $ref: '#/definitions/NewJob'
    required: true
    description: "Model of all editable properties within a filter job"
    in: body
paths:
  /filters:
    post:
      tags:
      - "Filter"
      summary: "Create a filter job for a dataset"
      description: "Create a job so that dimensions can be added to filter a dataset"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/filter_job'
      responses:
        200:
          description: "Job was created"
          schema:
            $ref: '#/definitions/JobState'
        400:
          description: "Invalid request body"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}:
    parameters:
      - $ref: '#/parameters/filter_id'
    get:
      tags:
      - "Filter"
      summary: "Get a description of a filter job"
      description: "Get the state of the filter job"
      produces:
      - "application/json"
      responses:
        200:
          description: "The job was found and a `JobState` is returned"
          schema:
            $ref: '#/definitions/JobState'
        404:
           $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Filter"
      summary: "Update the state of the job"
      description: |
        Update the filter job by providing new properties
      parameters:
      - $ref: '#/parameters/filter_job'
      responses:
        200:
          description: "The state has been updated"
        400:
          description: "The job has been locked as it has been `submitted` to be processed"
        404:
          $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions:
    get:
      tags:
       - "Filter"
      summary: "Get all dimensions used by this filter"
      description: |
        Return a list of all dimensions which are going to be used to filter on
      parameters:
      - $ref: '#/parameters/filter_id'
      responses:
        200:
          description: "A list of dimension URLs"
          schema:
            type: array
            items:
              type: string
        404:
          $ref: '#/responses/FilterJobNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions/{name}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
    post:
      tags:
      - "Filter"
      summary: "Add a dimension to filter on with a list of values"
      description: "The dimension can only be added into the job if the state is still set to `created` otherwise 400 status code is returned"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/dimension'
      responses:
        200:
          description: "The dimension was created"
        400:
          description: |
            This error code could be one or more of:
            * The filter job has been locked as it has been `submitted` to be processed
            * Invalid request body
            * Filter job was not found
        404:
          description: "Dimension name not found"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Filter"
      summary: "Remove a dimension and any values set within the dimension"
      description: "Remove a dimension and any values set within the dimension"
      responses:
        200:
          description: "The dimension was removed"
        400:
          description: |
            This error code could be one or more of:
            * The filter job has been locked as it has been `submitted` to be processed
            * Filter job was not found
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    get:
      tags:
      - "Filter"
      summary: "Get all values from a dimension which have been set"
      description: "Get a list of all values which will be used to filter the dimension"
      responses:
        200:
          description: "A list of all values for a dimension was returned"
          schema:
            $ref: '#/definitions/Dimension'
        400:
          description: "Filter job was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{filter_id}/dimensions/{name}/options/{value}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/value'
    get:
      tags:
      - "Filter"
      summary: "Check if a value exists within a dimension"
      description: "Check if a value exists within a dimension"
      responses:
        200:
          description: "Value exists within the dimension"
        400:
          $ref: '#/responses/FilterOrDimensionNotFound'
        404:
          description: "Dimension value was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Filter"
      summary: "Add a value to a dimension to filter on"
      description: "Add a value to a dimension to filter on"
      responses:
        200:
          description: "Value was added"
        400:
          description: |
            This error code could be one or more of:
            * The filter job has been locked as it has been `submitted` to be processed
            * Filter job was not found
        404:
          description: " Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Filter"
      summary: "Remove a value from a dimension"
      description: "Remove a single value from a dimension"
      responses:
        200:
          description: "Value was removed"
        400:
          description: |
            This error code could be one or more of:
            * The filter job has been locked as it has been `submitted` to be processed
            * Filter job was not found
            * Dimension name was not found
        404:
          description: "Dimension value was not found"
        500:
          $ref: '#/responses/InternalError'
responses:
  FilterJobNotFound:
    description: "Filter job not found"
  FilterOrDimensionNotFound:
    description: "Filter job or dimension name not found"
  InternalError:
    description: "Failed to process the request due to an internal error"
definitions:
  NewJob:
    description: "A model used to create new filter jobs. Dimensions are optional"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dimensions:
          readOnly: false
          type: array
          description: "A list of dimensions dimensions to include on the filter job"
          items:
            $ref: '#/definitions/Dimension'
  JobState:
    description: |
      A description of a job to generate a customised dataset
    type: object
    required: ["dataset", "edition", "version"]
    properties:
      filter_id:
        readOnly: true
        type: string
        description: "A unique id for this filter job"
      dataset:
        type: string
        description: "The type of dataset"
      edition:
        type: string
        description: "The edition of the dataset (This could be monthly or yearly version)"
      version:
        type: string
        description: "The version of the dataset (This includes any amendments to the original dataset edition)"
      state:
        type: string
        description: |
          The state of the job can be in five states;
          * created - The job is ready to be updated with filters. (default state)
          * submitted - The job has been submitted to be processed. This will lock the job and no further changes can be done
          * in progress -
          * completed - The job has been completed and can be downloaded using the `downloadUrl`
          * failed - The job failed to be processed
      dimensions:
        readOnly: true
        type: array
        description: "List of dimensions URL used for this filter"
        items:
          type: string
      downloads:
        readOnly: true
        type: object
        description: |
          The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed
        properties:
          xls:
            $ref: '#/definitions/DownloadFile'
          json:
           $ref: '#/definitions/DownloadFile'
          csv:
           $ref: '#/definitions/DownloadFile'
      events:
        readOnly: true
        type: object
        description: |
          A list of event which happened to the job.
        properties:
          info:
            type: array
            items:
              $ref: '#/definitions/Event'
          error:
            type: array
            items:
              $ref: '#/definitions/Event'
  Dimension:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      values:
        type: array
        description: "A list of values within the dimension"
        items:
          type: string
  Event:
    type: object
    description: "A description of an event which has happened to the job"
    properties:
      time:
        type: string
        description: "The time of the event happened"
      type:
        type: string
        description: "The type of event which happened"
      message:
        type: string
        description: "The description of the event which has happened"
  DownloadFile:
    type: object
    properties:
      url:
        type: string
        description: "The URL to the generated file"
      size:
        type: string
        description: "The size of the file in bytes"