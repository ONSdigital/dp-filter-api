swagger: "2.0"
info:
  description: "Create and submit custom queries, known as `filters`, against a given dataset.
  Specify which values, known as `options`, are of interest in each `dimension`, and then submit a filter.
  This generates a `filter output`, which provides links to the filtered results in a variety of formats."
  version: "1.0.0"
  title: "Filter a dataset"
  license:
    name: "Open Government Licence v3.0"
    url: "http://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
basePath: "/v1"
tags:
- name: "Public"
  description: "Used to filter published datasets"
- name: "Private"
  description: "Used to update filter outputs for a published dataset"
schemes:
- "http"
parameters:
  filter_id:
    name: id
    type: string
    required: true
    description: "The unique filter ID for customising a dataset"
    in: path
  filter_output_id:
    name: filter_output_id
    type: string
    required: true
    description: "The unique filter output ID for a customised dataset"
    in: path
  limit:
    name: limit
    type: integer
    description: "Limit the number of rows returned in a preview. Defaults to 20 and capped at 100"
    in: query
  page_limit:
    name: limit
    description: "Limit the number of items that will be returned. Defaults to 20 and capped at 1000"
    in: query
    required: false
    type: integer
  offset:
    name: offset
    description: "Starting index of the items array that will be returned. By default it is zero, meaning that the returned items will start from the beginning."
    in: query
    required: false
    type: integer
  name:
    name: name
    type: string
    required: true
    description: "The name of a dimension"
    in: path
  option:
    name: option
    type: string
    required: true
    description: "The single option for a dimension"
    in: path
  dimension:
    name: dimension
    schema:
      $ref: '#/definitions/Dimension'
    required: true
    description: "A dimension to filter the dataset"
    in: body
  options:
    required: false
    name: options
    schema:
      $ref: '#/definitions/Options'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  patch_options:
    required: true
    name: patch
    schema:
      $ref: '#/definitions/PatchOptions'
    description: "A list of options for a dimension to filter the dataset"
    in: body
  new_filter:
    name: filter
    schema:
      $ref: '#/definitions/NewFilterRequest'
    required: true
    description: "Model of all editable properties within a filter"
    in: body
  update_filter_output:
    name: filter_output
    schema:
      $ref: '#/definitions/UpdateOutputRequest'
    required: true
    description: "Model of all editable properties within a filter output"
    in: body
  submitted:
    name: submitted
    description: "A flag to indicate the submission of a filter"
    in: query
    type: boolean
  update_filter:
    name: filter
    schema:
      $ref: '#/definitions/UpdateFilterRequest'
    required: true
    description: "Model of all editable properties within a filter"
    in: body
  event:
    name: event
    schema:
      $ref: '#/definitions/Event'
    required: true
    description: "The model of an event"
    in: body
  if_match:
    name: If-Match
    required: true
    description: "Filter resource version, as returned by a previous ETag, to be validated; or '*' to skip the version check"
    in: header
    type: string
securityDefinitions:
  InternalAPIKey:
    name: internal-token
    description: "API key used to allow only internal services to update the state of an import job"
    in: header
    type: apiKey
paths:
  /filters:
    post:
      tags:
      - "Public"
      summary: "Create a filter for a dataset"
      description: "Create a resource for listing a selection of dimensions and dimension options to be added to filter for a dataset"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/new_filter'
      responses:
        201:
          description: "filter was created"
          schema:
            $ref: '#/definitions/NewFilterResponse'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body"
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}:
    parameters:
      - $ref: '#/parameters/filter_id'
    get:
      tags:
      - "Public"
      summary: "Get a filter"
      description: "Get document describing the filter"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter was found and document is returned"
          schema:
            $ref: '#/definitions/NewFilterResponse'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        404:
           $ref: '#/responses/FilterNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Public"
      summary: "Update a filter"
      description: "Update the filter by providing new properties, submit a filter for processing by setting query parameter `submitted` to `true`"
      parameters:
      - $ref: '#/parameters/submitted'
      - $ref: '#/parameters/update_filter'
      - $ref: '#/parameters/if_match'
      responses:
        200:
          description: "The filter job has been updated"
          schema:
            $ref: '#/definitions/UpdateFilterResponse'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body or If-Match header not provided"
        404:
          $ref: '#/responses/FilterNotFound'
        409:
          description: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions:
    get:
      tags:
       - "Public"
      summary: "Get all dimensions used in this filter"
      description: |
        Return a list of all dimensions which are going to be used to filter on
      parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/page_limit'
      - $ref: '#/parameters/offset'
      responses:
        200:
          description: "A list of dimension URLs"
          schema:
            type: array
            items:
              $ref: '#/definitions/Dimension'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        404:
          $ref: '#/responses/FilterNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions/{name}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
    get:
      tags:
      - "Public"
      summary: "Get a dimension from a filter"
      description: "Return details of a specific dimension within a filter"
      responses:
        200:
          description: "A Dimension within a filter was returned"
          schema:
            $ref: '#/definitions/Dimension'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Public"
      summary: "Add a dimension to a filter"
      description: "Add a dimension to filter with a list of options"
      produces:
      - "application/json"
      parameters:
      - $ref: '#/parameters/options'
      - $ref: '#/parameters/if_match'
      responses:
        201:
          description: "The dimension was created"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body"
        404:
          description: "Filter job was not found"
        409:
          description: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    patch:
      tags:
      - "Public"
      summary: "Update dimension options against a filter job"
      description: "Patch a list of dimension options for a filter"
      produces:
      - "application/json-patch+json"
      parameters:
      - $ref: '#/parameters/patch_options'
      - $ref: '#/parameters/if_match'
      responses:
        200:
          description: "The dimension was patched and the successfully applied patch operations are returned"
          schema:
            $ref: '#/definitions/PatchOptions'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Invalid request body, filter job does not exist or too many values have been provided in the patch operations"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        404:
          description: "Dimension was not found"
        409:
          description: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Public"
      summary: "Remove a dimension from a filter"
      description: "Remove a dimension and any options set within the dimension"
      parameters:
        - $ref: '#/parameters/if_match'
      responses:
        204:
          description: "The dimension was removed"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: "Dimension name was not found"
        409:
          description: '#/responses/FilterConflict'
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions/{name}/options:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/page_limit'
      - $ref: '#/parameters/offset'
    get:
      tags:
      - "Public"
      summary: "Get all options for a filtered dimension"
      description: "Get a list of all options which will be used to filter the dimension"
      responses:
        200:
          description: "A list of all options for a dimension was returned"
          schema:
            type: array
            items:
              $ref: '#/definitions/Option'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: "Dimension name was not found"
        500:
          $ref: '#/responses/InternalError'
  /filters/{id}/dimensions/{name}/options/{option}:
    parameters:
      - $ref: '#/parameters/filter_id'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/option'
    get:
      tags:
      - "Public"
      summary: "Get a specific option for a filtered dimension"
      description: "Get a specified option from the options which will be used to filter the dimension"
      responses:
        200:
          description: "An option within a dimension was returned"
          schema:
            $ref: '#/definitions/Option'
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          $ref: '#/responses/FilterOrDimensionNotFound'
        404:
          description: "Dimension option was not found"
        500:
          $ref: '#/responses/InternalError'
    post:
      tags:
      - "Public"
      summary: "Add an option to a filtered dimension"
      description: "Add an option to a filtered dimension"
      parameters:
        - $ref: '#/parameters/if_match'
      responses:
        201:
          description: "Option was added"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: "Filter was not found"
        404:
          description: " Dimension name was not found"
        409:
          description: '#/responses/FilterConflict'
        422:
          description: "Unprocessable entity - instance has been removed"
        500:
          $ref: '#/responses/InternalError'
    delete:
      tags:
      - "Public"
      summary: "Remove an option from a filtered dimension"
      description: "Remove a single option from a dimension"
      parameters:
        - $ref: '#/parameters/if_match'
      responses:
        204:
          description: "Option was removed"
          headers:
            ETag:
              type: string
              description: "Defines a unique filter resource version"
        400:
          description: |
            This error code could be one or more of:
            * Filter was not found
            * Dimension name was not found
        404:
          description: "Dimension option was not found"
        409:
          description: '#/responses/FilterConflict'
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_output_id}:
    parameters:
      - $ref: '#/parameters/filter_output_id'
    get:
      tags:
      - "Public"
      summary: "Get a filter output"
      description: "Get document describing the filter output"
      produces:
      - "application/json"
      responses:
        200:
          description: "The filter output was found and document is returned"
          schema:
            $ref: '#/definitions/FilterOutputResponse'
        404:
           $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
    put:
      tags:
      - "Private"
      summary: "Update a filter output"
      description: |
        Update the filter output state and to contain downloads
      parameters:
      - $ref: '#/parameters/update_filter_output'
      security:
      - InternalAPIKey: []
      responses:
        200:
          description: "The filter output has been updated"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        403:
          description: "Forbidden, the filter output state has been set to `completed`, resource has a list of downloadable files"
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_output_id}/events:
    parameters:
      - $ref: '#/parameters/filter_output_id'
    post:
      tags:
      - "Private"
      summary: "Add an event to a filter output"
      description: |
        Add an event to a filter output
      parameters:
      - $ref: '#/parameters/event'
      security:
      - InternalAPIKey: []
      responses:
        201:
          description: "The event has been created on the filter output"
        400:
          description: "Invalid request body"
        401:
          description: "Unauthorised, request lacks valid authentication credentials"
        404:
          $ref: '#/responses/FilterOutputNotFound'
        500:
          $ref: '#/responses/InternalError'
  /filter-outputs/{filter_output_id}/preview:
    parameters:
      - $ref: '#/parameters/filter_output_id'
      - $ref: '#/parameters/limit'
    get:
      tags:
      - "Public"
      summary: "Get a preview of the filtered output"
      description: "Get a preview of up to 100 observations using the state of the filter output job. By default only 20 rows will be returned. To change this use the `limit` query. It could be possible no results are returned due to data sparsity."
      produces:
      - "application/json"
      responses:
        200:
          description: "A preview of the current filter state has been returned"
          schema:
            $ref: '#/definitions/Preview'
        400:
          description: "No dimensions are present in the filter output"
        404:
          description: "The filter id was not found"
        500:
          $ref: '#/responses/InternalError'
responses:
  FilterNotFound:
    description: "Filter not found"
  FilterConflict:
    description: "Filter was modified by an external entity"
  FilterOutputNotFound:
    description: "Filter output not found"
  FilterOrDimensionNotFound:
    description: "Filter or dimension name not found"
  InternalError:
    description: "Failed to process the request due to an internal error"
  MethodNotSupported:
    description: "Attempted to call an endpoint that is not supported for this API"
definitions:
  FilterOutputResponse:
    description: "A model for the response body when retrieving a filter output"
    allOf:
    - type: object
      properties:
        downloads:
          $ref: '#/definitions/Downloads'
        state:
          description: "This describes the status of the filter."
          example: "completed"
          type: string
    - $ref: '#/definitions/JobState'
  NewFilterRequest:
    description: "A model used to create new filters. Dimensions are optional"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dataset:
          $ref: '#/definitions/Dataset'
        dimensions:
          readOnly: false
          type: array
          description: "A list of dimensions in the filter job"
          items:
             $ref: '#/definitions/DimensionOptions'
  UpdateFilterRequest:
    description: "A model used to update filters. Dimensions are optional, while downloads and events are for internal use only."
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dataset:
          readOnly: false
          type: object
          description: 'A dataset to filter on'
          properties:
            version:
              type: integer
              description: "A version of the dataset to filter on"
  NewFilterResponse:
    description: "A model for the response body when creating a new filter"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dataset:
          $ref: '#/definitions/Dataset'
  UpdateFilterResponse:
    description: "A model for the response body when updating a filter"
    allOf:
    - $ref: '#/definitions/JobState'
    - type: object
      properties:
        dataset:
          $ref: '#/definitions/Dataset'
        links:
          type: object
          properties:
            filter_output:
              description: "A link object containing the url to the filter output document, this is only returned once the submitted query parameter is set to true."
              type: object
              properties:
                href:
                  description: "A URL to the filter output document"
                  example: "http://localhost:8080/filter-outputs/95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
                id:
                  description: "An ID of the created filter output document"
                  example: "95c4669b-3ae9-4ba7-b690-87e890a1c543"
                  type: string
  UpdateOutputRequest:
    description: "A model used to update filter outputs. Only the downloads list and state are editable"
    type: object
    properties:
      state:
        type: string
        description: |
          The state of the job can be in five states;
          * created - The job is ready to be updated with filters. (default state)
          * submitted - The job has been submitted to be processed. This will lock the job and no further changes can be done
          * completed - The job has been completed, if the filter created results the download links will contain links. It is
                        possible that a job gets marked as completed but no download URLs are present, this is due to the filter job
                        returning no results. See the events for more information.
          * failed - The job failed to be processed, See events for more information
      downloads:
        $ref: '#/definitions/Downloads'
  JobState:
    description: |
      A description of a job to generate a customised dataset
    type: object
    required: ["instance_id"]
    properties:
      filter_id:
        readOnly: true
        type: string
        description: "A unique id for this resource"
      dimension_list_url:
        readOnly: true
        type: string
        description: "A url that lists all dimensions currently set for filter"
      links:
        $ref: '#/definitions/FilterLinks'
      events:
        $ref: '#/definitions/Events'
  Dataset:
    readOnly: false
    type: object
    description: "A version of an edition for a dataset to filter on."
    properties:
      id:
        type: string
        description: "The unique identifier of a dataset"
      edition:
        type: string
        description: "An edition of a dataset"
      version:
        type: integer
        description: "A version of a dataset"
  Dimension:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      dimension_url:
        type: string
        description: "A link to the filtered options within the dimension"
        items:
          type: string
          example: "/filters/00001/dimensions/age"
  DimensionOptions:
    type: object
    description: "A dimension to filter on a dataset. Information on a dimension can be gathered using the `Dataset API`"
    properties:
      name:
        type: string
        description: "The name of the dimension to filter on"
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  Downloads:
    type: object
    description: |
      The url to download the customised dataset. This will be blank until the jobs `state` has been marked completed and can only be updated if authorised
    properties:
      xls:
        $ref: '#/definitions/DownloadFile'
      csv:
        $ref: '#/definitions/DownloadFile'
  Option:
    type: object
    description: "An option for a dimension to filter on a dataset. Information on a dimension option can be gathered using the `Dataset API`"
    properties:
      dimension_option_url:
        type: string
        description: "A link to a filtered dimension option"
      option:
        type: string
        description: "The filtered dimension option"
  Options:
    type: object
    description: "A list of options for dimension to filter on a dataset"
    properties:
      name:
        type: string
        description: "The name of the dimension"
      options:
        type: array
        description: "A list of options for dimension to filter on a dataset"
        items:
          type: string
  PatchOptions:
    description: "A list of operations to patch dimension to filter on a dataset. Can only handle adding or removing values from options array, each element in array is processed in sequential order. Method Patch does not abide by any existing rfc standard, yet this was adapted from rfc6902 standard."
    type: array
    items:
      type: object
      description: "Item containing all necessary information to make a single operation on the resource."
      properties:
        op:
          description: |
            The operation to be made on path.
            * add - Adding multiple values that are the same or already  in resource will not be appended to array.
            * remove - Removing values that do not exist in array will not result in failure
          type: string
          enum: [
            add,
            remove
          ]
        path:
          description: "Path to value that needs to be operated on. The special '-' key is the indicator of an array at a specific path"
          type: string
          example: "/options/-"
        value:
          description: "A list of values defined by the operation value. 'op' to define the update against array"
          type: array
          items:
            type: string
  Events:
    type: array
    items:
      $ref: '#/definitions/Event'
    description: |
      A list of events which happened to the resource, can only be updated if authorised.
  Event:
    type: object
    description: "A description of an event which has happened to the resource"
    properties:
      time:
        type: string
        description: "The time of the event happened"
      type:
        type: string
        description: "The type of event which happened"
  DownloadFile:
    type: object
    properties:
      href:
        type: string
        description: "The URL to the generated file"
      size:
        type: string
        description: "The size of the file in bytes"
      public:
        type: string
        description: "The URL to a public-accessible download"
      private:
        type: string
        description: "The URL to a non public-accessible download"
      skipped:
        type: boolean
        description: "A flag to indicate the file will not be generated due to size"
  FilterLinks:
    description: "A list of links related to this resource"
    readOnly: true
    type: object
    properties:
      version:
        type: object
        properties:
          href:
            description: "A URL to the version being filtered"
            example: "http://localhost:8080/datasets/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/editions/2017/version/1"
            type: string
          id:
            description: "An ID of the version being filtered"
            example: "de3bc0b6-d6c4-4e20-917e-95d7ea8c91dc"
            type: string
      preview:
        type: object
        properties:
          href:
            description: "A URL to a preview of the filter output"
            example: "http://localhost:8080/filter-outputs/DE3BC0B6-D6C4-4E20-917E-95D7EA8C91DC/preview"
            type: string
  Preview:
    description: "A preview of the current filter state"
    readOnly: true
    type: object
    properties:
      headers:
        description: "A list of all headers in the dataset"
        type: array
        items:
          type: string
      number_of_rows:
        description: "The number of rows, this can be in the range of 0 - 20"
        type: integer
      number_of_columns:
        description: "The number of columns"
        type: integer
      rows:
        description: "A list of all rows for the preview as a two dimensional array"
        type: array
        items:
          type: array
          items:
            type: string
