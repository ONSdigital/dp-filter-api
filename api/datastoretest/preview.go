// Code generated by moq; DO NOT EDIT
// github.com/matryer/moq

package datastoretest

import (
	"github.com/ONSdigital/dp-filter-api/models"
	"github.com/ONSdigital/dp-filter-api/preview"
	"sync"
)

var (
	lockPreviewDatasetMockGetPreview sync.RWMutex
)

// PreviewDatasetMock is a mock implementation of PreviewDataset.
//
//     func TestSomethingThatUsesPreviewDataset(t *testing.T) {
//
//         // make and configure a mocked PreviewDataset
//         mockedPreviewDataset := &PreviewDatasetMock{
//             GetPreviewFunc: func(filter *models.Filter, limit int64) (*preview.FilterPreview, error) {
// 	               panic("TODO: mock out the GetPreview method")
//             },
//         }
//
//         // TODO: use mockedPreviewDataset in code that requires PreviewDataset
//         //       and then make assertions.
//
//     }
type PreviewDatasetMock struct {
	// GetPreviewFunc mocks the GetPreview method.
	GetPreviewFunc func(filter *models.Filter, limit int64) (*preview.FilterPreview, error)

	// calls tracks calls to the methods.
	calls struct {
		// GetPreview holds details about calls to the GetPreview method.
		GetPreview []struct {
			// Filter is the filter argument value.
			Filter *models.Filter
			// Limit is the limit argument value.
			Limit int64
		}
	}
}

// GetPreview calls GetPreviewFunc.
func (mock *PreviewDatasetMock) GetPreview(filter *models.Filter, limit int64) (*preview.FilterPreview, error) {
	if mock.GetPreviewFunc == nil {
		panic("moq: PreviewDatasetMock.GetPreviewFunc is nil but PreviewDataset.GetPreview was just called")
	}
	callInfo := struct {
		Filter *models.Filter
		Limit  int64
	}{
		Filter: filter,
		Limit:  limit,
	}
	lockPreviewDatasetMockGetPreview.Lock()
	mock.calls.GetPreview = append(mock.calls.GetPreview, callInfo)
	lockPreviewDatasetMockGetPreview.Unlock()
	return mock.GetPreviewFunc(filter, limit)
}

// GetPreviewCalls gets all the calls that were made to GetPreview.
// Check the length with:
//     len(mockedPreviewDataset.GetPreviewCalls())
func (mock *PreviewDatasetMock) GetPreviewCalls() []struct {
	Filter *models.Filter
	Limit  int64
} {
	var calls []struct {
		Filter *models.Filter
		Limit  int64
	}
	lockPreviewDatasetMockGetPreview.RLock()
	calls = mock.calls.GetPreview
	lockPreviewDatasetMockGetPreview.RUnlock()
	return calls
}
